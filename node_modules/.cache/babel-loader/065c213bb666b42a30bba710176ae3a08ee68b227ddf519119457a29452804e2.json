{"ast":null,"code":"var _jsxFileName = \"/Users/thanaphong.s/Desktop/React/Pcha-training/example_for_training/src/components/TodoList/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./TodoList.css\";\n// import Box from \"../Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [idTodo, setIdTodo] = useState(0);\n  const [todoList, setTodoList] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [newTodoEdit, setNewTodoEdit] = useState(\"\");\n  const handleAddTodo = () => {\n    if (newTodo.trim() !== \"\") {\n      setTodoList([...todoList, {\n        id: idTodo,\n        text: newTodo,\n        isEdit: false\n      }]);\n      setNewTodo(\"\");\n      let setID = idTodo + 1;\n      setIdTodo(setID);\n    }\n  };\n  const handleEditTodo = item => {\n    let sum = todoList.filter(todo => {\n      if (todo.id === item.id) {\n        return todo.isEdit = true;\n      } else {\n        return todo;\n      }\n    });\n    setTodoList(sum);\n  };\n  const handleUpdate = item => {\n    if (newTodoEdit.trim() !== \"\") {\n      let updatedList = todoList.map(todo => todo.id === item.id ? {\n        ...todo,\n        text: newTodoEdit,\n        isEdit: false\n      } : todo);\n      setTodoList(updatedList);\n    }\n  };\n  const handleDelete = item => {\n    let deletedList = todoList.filter(todo => {\n      return todo.id !== item.id;\n    });\n    setTodoList(deletedList);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Hello Todo List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-todolist\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todolist\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [todoList.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        children: \"s\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 91\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 85\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false);\n              }), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  // return (\n  //   <>\n  //     <div className=\"container mt-lg-5 content\">\n  //       <h1 className=\"text-center mb-3\">Hello Todo list</h1>\n  //       <div className=\"box\">\n  //         <div className=\"input-group w-50\">\n  //           <input type=\"text\" className=\"form-control\" onChange={(e) => setNewTodo(e.target.value)} value={newTodo} />\n  //           <button type=\"button\" className=\"btn btn-success input-group-text\" onClick={handleAddTodo}>\n  //             Add\n  //           </button>\n  //         </div>\n  //       </div>\n\n  //       <div className=\"row\">\n  //         <div className=\"col-8\">\n  //           <h4>Todo List</h4>\n  //           <table className=\"table table-striped\">\n  //             <thead>\n  //               <tr className=\"table-dark\">\n  //                 <td className=\"col-1\">#</td>\n  //                 <td className=\"col-9\">List name</td>\n  //                 <td className=\"col-1\">Edit</td>\n  //                 <td className=\"col-1\">Delete</td>\n  //               </tr>\n  //             </thead>\n  //             <tbody>\n  //               {todoList.map((item: TodoItem, index: number) => {\n  //                 return (\n  //                   <tr key={index}>\n  //                     <td className=\"col-1\">{item.id}</td>\n  //                     <td className=\"col-9\">\n  //                       {item.isEdit ? (\n  //                         <>\n  //                           <input\n  //                             className=\"form-control\"\n  //                             onChange={(e) => setNewTodoEdit(e.target.value)}\n  //                             defaultValue={item.text}\n  //                           />\n  //                         </>\n  //                       ) : (\n  //                         <p>{item.text}</p>\n  //                       )}\n  //                     </td>\n  //                     <td className=\"col-1\">\n  //                       {item.isEdit ? (\n  //                         <button className=\"btn btn-warning\" onClick={() => handleUpdate(item)}>\n  //                           Update\n  //                         </button>\n  //                       ) : (\n  //                         <button className=\"btn btn-outline-warning\" onClick={() => handleEditTodo(item)}>\n  //                           Edit\n  //                         </button>\n  //                       )}\n  //                     </td>\n  //                     <td className=\"col-1\">\n  //                       <button className=\"btn btn-danger\" onClick={() => handleDelete(item)}>\n  //                         Delete\n  //                       </button>\n  //                     </td>\n  //                   </tr>\n  //                 );\n  //               })}\n  //             </tbody>\n  //           </table>\n  //         </div>\n  //         <div className=\"col-4\"></div>\n  //       </div>\n  //     </div>\n  //   </>\n  // );\n};\n_s(TodoList, \"ju6uUZAjm4WS5Op6XqLC9Y7X/hs=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","_s","idTodo","setIdTodo","todoList","setTodoList","newTodo","setNewTodo","newTodoEdit","setNewTodoEdit","handleAddTodo","trim","id","text","isEdit","setID","handleEditTodo","item","sum","filter","todo","handleUpdate","updatedList","map","handleDelete","deletedList","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","index","_c","$RefreshReg$"],"sources":["/Users/thanaphong.s/Desktop/React/Pcha-training/example_for_training/src/components/TodoList/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./TodoList.css\";\n// import Box from \"../Box\";\n\ninterface TodoItem {\n  id: number;\n  text: string;\n  isEdit: boolean;\n}\n\nconst TodoList: React.FC = () => {\n  const [idTodo, setIdTodo] = useState<number>(0);\n  const [todoList, setTodoList] = useState<TodoItem[]>([]);\n  const [newTodo, setNewTodo] = useState<string>(\"\");\n  const [newTodoEdit, setNewTodoEdit] = useState<string>(\"\");\n\n  const handleAddTodo = () => {\n    if (newTodo.trim() !== \"\") {\n      setTodoList([\n        ...todoList,\n        {\n          id: idTodo,\n          text: newTodo,\n          isEdit: false,\n        },\n      ]);\n      setNewTodo(\"\");\n      let setID = idTodo + 1;\n      setIdTodo(setID);\n    }\n  };\n\n  const handleEditTodo = (item: TodoItem) => {\n    let sum = todoList.filter((todo: TodoItem) => {\n      if (todo.id === item.id) {\n        return (todo.isEdit = true);\n      } else {\n        return todo;\n      }\n    });\n    setTodoList(sum);\n  };\n\n  const handleUpdate = (item: TodoItem) => {\n    if (newTodoEdit.trim() !== \"\") {\n      let updatedList = todoList.map((todo) =>\n        todo.id === item.id ? { ...todo, text: newTodoEdit, isEdit: false } : todo\n      );\n      setTodoList(updatedList);\n    }\n  };\n\n  const handleDelete = (item: TodoItem) => {\n    let deletedList = todoList.filter((todo) => {\n      return todo.id !== item.id;\n    });\n    setTodoList(deletedList);\n  };\n\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"box shadow-lg\">\n          <header>\n            <h4>Hello Todo List</h4>\n          </header>\n          <section>\n            <div className=\"add-todolist\">\n              <input type=\"text\" className=\"form-control\" />\n              <button className=\"btn btn-success\">Add</button>\n            </div>\n            <div className=\"todolist\">\n              <ul>\n                {todoList.map((item: TodoItem, index: number) => {\n                  return (\n                    <>\n                      <li key={index} className=\"list-item\"><span>{item.text}</span><span><button>s</button></span></li>\n                    </>\n                  );\n                })}\n                <li></li>\n              </ul>\n            </div>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n  // return (\n  //   <>\n  //     <div className=\"container mt-lg-5 content\">\n  //       <h1 className=\"text-center mb-3\">Hello Todo list</h1>\n  //       <div className=\"box\">\n  //         <div className=\"input-group w-50\">\n  //           <input type=\"text\" className=\"form-control\" onChange={(e) => setNewTodo(e.target.value)} value={newTodo} />\n  //           <button type=\"button\" className=\"btn btn-success input-group-text\" onClick={handleAddTodo}>\n  //             Add\n  //           </button>\n  //         </div>\n  //       </div>\n\n  //       <div className=\"row\">\n  //         <div className=\"col-8\">\n  //           <h4>Todo List</h4>\n  //           <table className=\"table table-striped\">\n  //             <thead>\n  //               <tr className=\"table-dark\">\n  //                 <td className=\"col-1\">#</td>\n  //                 <td className=\"col-9\">List name</td>\n  //                 <td className=\"col-1\">Edit</td>\n  //                 <td className=\"col-1\">Delete</td>\n  //               </tr>\n  //             </thead>\n  //             <tbody>\n  //               {todoList.map((item: TodoItem, index: number) => {\n  //                 return (\n  //                   <tr key={index}>\n  //                     <td className=\"col-1\">{item.id}</td>\n  //                     <td className=\"col-9\">\n  //                       {item.isEdit ? (\n  //                         <>\n  //                           <input\n  //                             className=\"form-control\"\n  //                             onChange={(e) => setNewTodoEdit(e.target.value)}\n  //                             defaultValue={item.text}\n  //                           />\n  //                         </>\n  //                       ) : (\n  //                         <p>{item.text}</p>\n  //                       )}\n  //                     </td>\n  //                     <td className=\"col-1\">\n  //                       {item.isEdit ? (\n  //                         <button className=\"btn btn-warning\" onClick={() => handleUpdate(item)}>\n  //                           Update\n  //                         </button>\n  //                       ) : (\n  //                         <button className=\"btn btn-outline-warning\" onClick={() => handleEditTodo(item)}>\n  //                           Edit\n  //                         </button>\n  //                       )}\n  //                     </td>\n  //                     <td className=\"col-1\">\n  //                       <button className=\"btn btn-danger\" onClick={() => handleDelete(item)}>\n  //                         Delete\n  //                       </button>\n  //                     </td>\n  //                   </tr>\n  //                 );\n  //               })}\n  //             </tbody>\n  //           </table>\n  //         </div>\n  //         <div className=\"col-4\"></div>\n  //       </div>\n  //     </div>\n  //   </>\n  // );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}