{"ast":null,"code":"import { add, check } from './types';\nvar id = 0;\nvar identity = function identity(arg) {\n  return arg;\n};\nvar normalize = function normalize(dispatchOrStore) {\n  if (dispatchOrStore && typeof dispatchOrStore.dispatch === 'function') {\n    return dispatchOrStore.dispatch;\n  } else {\n    return dispatchOrStore;\n  }\n};\nvar normalizeAll = function normalizeAll(dispatchOrStores) {\n  if (Array.isArray(dispatchOrStores)) {\n    return dispatchOrStores.map(normalize);\n  } else {\n    return normalize(dispatchOrStores);\n  }\n};\nexport default function createAction(description, payloadReducer, metaReducer) {\n  if (typeof description === 'function') {\n    metaReducer = payloadReducer;\n    payloadReducer = description;\n    description = undefined;\n  }\n  if (typeof payloadReducer !== 'function') {\n    payloadReducer = identity;\n  }\n  if (typeof metaReducer !== 'function') {\n    metaReducer = undefined;\n  }\n  var isSerializable = typeof description === 'string' && /^[0-9A-Z_]+$/.test(description);\n  if (isSerializable) {\n    check(description);\n    add(description);\n  } else {\n    ++id;\n  }\n  var type = isSerializable ? description : \"[\".concat(id, \"]\").concat(description ? ' ' + description : '');\n  var dispatchFunctions = undefined;\n  function makeAction() {\n    var payload = payloadReducer.apply(void 0, arguments);\n    if (metaReducer) {\n      return {\n        type: type,\n        payload: payload,\n        error: payload instanceof Error,\n        meta: metaReducer.apply(void 0, arguments)\n      };\n    }\n    return {\n      type: type,\n      payload: payload,\n      error: payload instanceof Error\n    };\n  }\n  var makeAndDispatch = function makeAndDispatch(dispatchs, isError) {\n    return function () {\n      var payloadedAction = makeAction.apply(void 0, arguments);\n      if (!payloadedAction.error) {\n        payloadedAction.error = isError;\n      }\n      if (Array.isArray(dispatchs)) {\n        return dispatchs.map(function (dispatch) {\n          return dispatch(payloadedAction);\n        });\n      } else if (dispatchs) {\n        return dispatchs(payloadedAction);\n      } else {\n        return payloadedAction;\n      }\n    };\n  };\n  function actionCreator() {\n    return makeAndDispatch(dispatchFunctions, false).apply(void 0, arguments);\n  }\n  actionCreator.asError = function () {\n    return makeAndDispatch(dispatchFunctions, true).apply(void 0, arguments);\n  };\n  actionCreator.getType = function () {\n    return type;\n  };\n  actionCreator.toString = function () {\n    return type;\n  };\n  actionCreator.raw = makeAction;\n  actionCreator.assignTo = function (dispatchOrStores) {\n    dispatchFunctions = normalizeAll(dispatchOrStores);\n    return actionCreator;\n  };\n  actionCreator.assigned = function () {\n    return !!dispatchFunctions;\n  };\n  actionCreator.bound = function () {\n    return false;\n  };\n  actionCreator.dispatched = actionCreator.assigned;\n  actionCreator.bindTo = function (dispatchOrStores) {\n    var boundActionCreator = makeAndDispatch(normalizeAll(dispatchOrStores, false));\n    boundActionCreator.asError = makeAndDispatch(normalizeAll(dispatchOrStores, true));\n    boundActionCreator.raw = makeAction;\n    boundActionCreator.getType = actionCreator.getType;\n    boundActionCreator.toString = actionCreator.toString;\n    boundActionCreator.assignTo = function () {\n      return boundActionCreator;\n    };\n    boundActionCreator.bindTo = function () {\n      return boundActionCreator;\n    };\n    boundActionCreator.assigned = function () {\n      return false;\n    };\n    boundActionCreator.bound = function () {\n      return true;\n    };\n    boundActionCreator.dispatched = boundActionCreator.bound;\n    return boundActionCreator;\n  };\n  return actionCreator;\n}\n;","map":{"version":3,"names":["add","check","id","identity","arg","normalize","dispatchOrStore","dispatch","normalizeAll","dispatchOrStores","Array","isArray","map","createAction","description","payloadReducer","metaReducer","undefined","isSerializable","test","type","concat","dispatchFunctions","makeAction","payload","apply","arguments","error","Error","meta","makeAndDispatch","dispatchs","isError","payloadedAction","actionCreator","asError","getType","toString","raw","assignTo","assigned","bound","dispatched","bindTo","boundActionCreator"],"sources":["/Users/thanaphong.s/Desktop/React/Pcha-training/example_for_training/node_modules/redux-act/esm/createAction.js"],"sourcesContent":["import { add, check } from './types';\nvar id = 0;\n\nvar identity = function identity(arg) {\n  return arg;\n};\n\nvar normalize = function normalize(dispatchOrStore) {\n  if (dispatchOrStore && typeof dispatchOrStore.dispatch === 'function') {\n    return dispatchOrStore.dispatch;\n  } else {\n    return dispatchOrStore;\n  }\n};\n\nvar normalizeAll = function normalizeAll(dispatchOrStores) {\n  if (Array.isArray(dispatchOrStores)) {\n    return dispatchOrStores.map(normalize);\n  } else {\n    return normalize(dispatchOrStores);\n  }\n};\n\nexport default function createAction(description, payloadReducer, metaReducer) {\n  if (typeof description === 'function') {\n    metaReducer = payloadReducer;\n    payloadReducer = description;\n    description = undefined;\n  }\n\n  if (typeof payloadReducer !== 'function') {\n    payloadReducer = identity;\n  }\n\n  if (typeof metaReducer !== 'function') {\n    metaReducer = undefined;\n  }\n\n  var isSerializable = typeof description === 'string' && /^[0-9A-Z_]+$/.test(description);\n\n  if (isSerializable) {\n    check(description);\n    add(description);\n  } else {\n    ++id;\n  }\n\n  var type = isSerializable ? description : \"[\".concat(id, \"]\").concat(description ? ' ' + description : '');\n  var dispatchFunctions = undefined;\n\n  function makeAction() {\n    var payload = payloadReducer.apply(void 0, arguments);\n\n    if (metaReducer) {\n      return {\n        type: type,\n        payload: payload,\n        error: payload instanceof Error,\n        meta: metaReducer.apply(void 0, arguments)\n      };\n    }\n\n    return {\n      type: type,\n      payload: payload,\n      error: payload instanceof Error\n    };\n  }\n\n  var makeAndDispatch = function makeAndDispatch(dispatchs, isError) {\n    return function () {\n      var payloadedAction = makeAction.apply(void 0, arguments);\n\n      if (!payloadedAction.error) {\n        payloadedAction.error = isError;\n      }\n\n      if (Array.isArray(dispatchs)) {\n        return dispatchs.map(function (dispatch) {\n          return dispatch(payloadedAction);\n        });\n      } else if (dispatchs) {\n        return dispatchs(payloadedAction);\n      } else {\n        return payloadedAction;\n      }\n    };\n  };\n\n  function actionCreator() {\n    return makeAndDispatch(dispatchFunctions, false).apply(void 0, arguments);\n  }\n\n  actionCreator.asError = function () {\n    return makeAndDispatch(dispatchFunctions, true).apply(void 0, arguments);\n  };\n\n  actionCreator.getType = function () {\n    return type;\n  };\n\n  actionCreator.toString = function () {\n    return type;\n  };\n\n  actionCreator.raw = makeAction;\n\n  actionCreator.assignTo = function (dispatchOrStores) {\n    dispatchFunctions = normalizeAll(dispatchOrStores);\n    return actionCreator;\n  };\n\n  actionCreator.assigned = function () {\n    return !!dispatchFunctions;\n  };\n\n  actionCreator.bound = function () {\n    return false;\n  };\n\n  actionCreator.dispatched = actionCreator.assigned;\n\n  actionCreator.bindTo = function (dispatchOrStores) {\n    var boundActionCreator = makeAndDispatch(normalizeAll(dispatchOrStores, false));\n    boundActionCreator.asError = makeAndDispatch(normalizeAll(dispatchOrStores, true));\n    boundActionCreator.raw = makeAction;\n    boundActionCreator.getType = actionCreator.getType;\n    boundActionCreator.toString = actionCreator.toString;\n\n    boundActionCreator.assignTo = function () {\n      return boundActionCreator;\n    };\n\n    boundActionCreator.bindTo = function () {\n      return boundActionCreator;\n    };\n\n    boundActionCreator.assigned = function () {\n      return false;\n    };\n\n    boundActionCreator.bound = function () {\n      return true;\n    };\n\n    boundActionCreator.dispatched = boundActionCreator.bound;\n    return boundActionCreator;\n  };\n\n  return actionCreator;\n}\n;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}